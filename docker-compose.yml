
networks:
  student-network:
    driver: bridge

volumes:
  postgres-data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - student-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - student-network
    ports:
      - "9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15
    networks:
      - student-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  api-service:
    build: ./api-service
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - student-network
    environment:
      SERVER_PORT: ${API_PORT}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      DATA_SERVICE_URL: ${DATA_SERVICE_URL}
    depends_on:
      - kafka
      - data-service

  data-service:
    build: ./data-service
    ports:
      - "${DATA_PORT}:${DATA_PORT}"
    networks:
      - student-network
    environment:
      SERVER_PORT: ${DATA_PORT}
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - postgres
      - kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - student-network
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: grade
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka